{"version":3,"sources":["GitHubStarBtn.jsx","MedalsPerMillionPeople/Card.jsx","MedalsPerMillionPeople/Input.jsx","MedalsPerMillionPeople/NavBar.js","MedalsPerMillionPeople/AxisBottom.js","MedalsPerMillionPeople/AxisLeft.js","MedalsPerMillionPeople/Marks.js","MedalsPerMillionPeople/Tooltip.jsx","MedalsPerMillionPeople/BarChart.jsx","MedalsPerMillionPeople/index.js","MedalsPerMillionPeople/useData.jsx","ScatterPlot/Input.jsx","ScatterPlot/Card.jsx","ScatterPlot/AxisBottom.js","ScatterPlot/AxisLeft.js","ScatterPlot/Marks.js","ScatterPlot/index.js","ScatterPlot/useData.jsx","App.js","index.js","MedalsPerMillionPeople/css/Card.module.css","ScatterPlot/css/Card.module.css","MedalsPerMillionPeople/css/BarChart.module.css","ScatterPlot/css/ScatterPlot.module.css","MedalsPerMillionPeople/css/Input.module.css","MedalsPerMillionPeople/css/Nav.module.css","ScatterPlot/css/Input.module.css"],"names":["GitHubStarBtn","user","repo","style","marginTop","marginLeft","src","frameborder","scrolling","width","height","title","Card","children","className","styles","flexCardListItem","flexCard","Input","min","max","selected","handleChange","inputContainer","Number","type","step","value","onChange","e","target","NavBar","view","setView","buttons","name","view_name","nav","map","button","key","ViewButton","onClick","preventDefault","AxisBottom","xScale","innerHeight","tickFormat","tickOffset","tickCount","ticks","tickValue","tick","transform","y2","y","dy","textAnchor","AxisLeft","yScale","domain","bandwidth","x","fontWeight","dominantBaseline","Marks","data","xValue","yValue","colorScale","tooltipFormat","onHover","onMove","hoveredValue","fadeOpacity","labelOffset","tooltipOffset","d","i","chartStyles","marks","onMouseEnter","onMouseLeave","onPointerMove","event","pointer","opacity","fill","length","tooltipStroke","tooltip","Tooltip","points","find","obj","entity","console","log","medals","toLocaleString","population","window","innerWidth","margin","top","right","bottom","left","xAxisTickFormat","format","labelFormat","BarChart","rows","useState","setHoveredValue","setPoints","handleHover","useCallback","trackPointer","useMemo","medals_per_million","scaleLog","extent","range","nice","scaleLinear","scaleBand","paddingInner","scaleSequential","interpolateInferno","viewBox","preserveAspectRatio","ChartTitle","Credit","href","MedalsPerMillionPeopleBar","topTeams","setTopTeams","rawData","setData","useEffect","isMounted","csv","autoType","then","useData","slice","last_updated","toLocaleDateString","x2","circleRadius","index","cx","cy","r","ScatterPlot","minMedals","setMinMedals","filter","axisLabel","App","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.9845cdc4.chunk.js","sourcesContent":["export const GitHubStarBtn = ({ user, repo }) => (\n  <div style={{ marginTop: \"0.5rem\", marginLeft: \"0.5rem\" }}>\n    <iframe\n      src={`https://ghbtns.com/github-btn.html?user=${user}&repo=${repo}&type=star&count=false&size=large`}\n      frameborder=\"0\"\n      scrolling=\"0\"\n      width=\"170\"\n      height=\"30\"\n      title=\"GitHub\"\n    />\n  </div>\n);\n","import styles from \"./css/Card.module.css\";\nexport const Card = ({ children }) => (\n  <li className={styles.flexCardListItem}>\n    <div className={styles.flexCard}>{children}</div>\n  </li>\n);\n","import styles from \"./css/Input.module.css\";\n\nexport const Input = ({ min, max, selected, handleChange }) => (\n  <div className={styles.inputContainer}>\n    <p>Include {Number(selected) === max ? \"all\" : \"top\"}</p>\n    <input\n      type=\"number\"\n      min={min}\n      max={max}\n      step=\"10\"\n      value={selected}\n      onChange={(e) => e.target.value > 0 && handleChange(e.target.value)}\n    />\n    <p> entities</p>\n  </div>\n);\n","import React from \"react\";\nimport styles from \"./css/Nav.module.css\";\n\nexport const NavBar = ({ view, setView }) => {\n  // A series of buttons to switch between views of charts.\n  const buttons = [\n    {\n      name: \"Medals Per Million\",\n      view_name: \"mpm\",\n      className: view === \"mpm\" ? \"active view-button\" : \"view-button\",\n    },\n    {\n      name: \"Total Medals\",\n      view_name: \"medals\",\n      className: view === \"medals\" ? \"active view-button\" : \"view-button\",\n    },\n  ];\n\n  return (\n    <div className={styles.nav}>\n      {buttons.map((button) => (\n        <ViewButton setView={setView} {...button} key={button.view_name} />\n      ))}\n    </div>\n  );\n};\n\nconst ViewButton = ({ name, view_name, className, setView }) => {\n  // A series of buttons to switch between views of charts.\n  const handleClick = (e) => {\n    e.preventDefault();\n    setView(view_name);\n  };\n  // Changes the button label according to current view.\n  return (\n    <button onClick={handleClick} type=\"button\" className={className}>\n      {name}\n    </button>\n  );\n};\n","import React from \"react\";\nimport styles from \"./css/BarChart.module.css\";\nexport const AxisBottom = ({\n  xScale,\n  innerHeight,\n  tickFormat,\n  tickOffset = 3,\n  tickCount = 6,\n}) =>\n  // Label and reference lines for x scale\n  xScale.ticks(tickCount).map((tickValue) => (\n    // Each tick goes to the position indicating its value\n    <g\n      className={styles.tick}\n      key={tickValue}\n      transform={`translate(${xScale(tickValue)}, 0)`}\n    >\n      {/* the values of x1, x2, y1 are 0, which is default */}\n      <line y2={innerHeight} />\n      <text\n        y={innerHeight + tickOffset}\n        dy=\"0.71em\"\n        style={{ textAnchor: \"middle\" }}\n      >\n        {tickFormat(tickValue)}\n      </text>\n    </g>\n  ));\n","import React from \"react\";\nimport styles from \"./css/BarChart.module.css\";\nexport const AxisLeft = ({ yScale, tickOffset = 3 }) =>\n  yScale.domain().map((tickValue) => (\n    <g\n      key={tickValue}\n      className={styles.tick}\n      transform={`translate(0,${yScale(tickValue) + yScale.bandwidth() / 2})`}\n    >\n      <text\n        x={-tickOffset}\n        style={{\n          fontWeight: \"bold\",\n          textAnchor: \"end\",\n          dominantBaseline: \"central\",\n        }}\n      >\n        {tickValue}\n      </text>\n    </g>\n  ));\n","import React from \"react\";\nimport { pointer } from \"d3\";\nimport chartStyles from \"./css/BarChart.module.css\";\nexport const Marks = ({\n  view,\n  data,\n  xScale,\n  xValue,\n  yScale,\n  yValue,\n  colorScale,\n  tooltipFormat,\n  onHover,\n  onMove,\n  hoveredValue,\n  fadeOpacity = 0.2,\n  labelOffset = 10,\n  tooltipOffset = 22,\n}) =>\n  data.map((d, i) => (\n    <g\n      className={chartStyles.marks}\n      key={yValue(d)}\n      onMouseEnter={() => onHover(yValue(d))}\n      onMouseLeave={() => onHover(null)}\n      onPointerMove={(event) => {\n        onHover(yValue(d));\n        onMove(pointer(event));\n      }}\n      opacity={hoveredValue && hoveredValue !== yValue(d) ? fadeOpacity : 1}\n    >\n      <rect\n        x={0}\n        y={yScale(yValue(d))}\n        width={xScale(xValue(d))}\n        height={yScale.bandwidth()}\n        fill={\n          view === \"mpm\"\n            ? colorScale((data.length - i) / data.length)\n            : \"orange\"\n        }\n      />\n      <text\n        className={chartStyles.tooltipStroke}\n        x={xScale(xValue(d)) + labelOffset}\n        y={yScale(yValue(d)) + yScale.bandwidth() / 2}\n        dominantBaseline=\"central\"\n      >\n        {tooltipFormat(xValue(d))}\n      </text>\n      <text\n        className={chartStyles.tooltip}\n        x={xScale(xValue(d)) + labelOffset}\n        y={yScale(yValue(d)) + yScale.bandwidth() / 2}\n        dominantBaseline=\"central\"\n      >\n        {tooltipFormat(xValue(d))}\n      </text>\n    </g>\n  ));\n","import chartStyles from \"./css/BarChart.module.css\";\nexport const Tooltip = ({ hoveredValue, data, points, labelOffset }) => {\n  const d = data.find((obj) => obj.entity === hoveredValue);\n  console.log(points);\n  return (\n    <g>\n      <text\n        className={chartStyles.tooltipStroke}\n        x={points[0] + labelOffset}\n        y={points[1]}\n        dy=\".42em\"\n      >\n        <tspan x={points[0] + labelOffset}>\n          {`${\n            d.medals > 1 ? \"Medals\" : \"Medal\"\n          }: ${d.medals.toLocaleString()} `}\n        </tspan>\n        <tspan\n          x={points[0] + labelOffset}\n          dy=\"1.3em\"\n        >{`Population: ${d.population.toLocaleString()}`}</tspan>\n      </text>\n      <text\n        className={chartStyles.tooltip}\n        x={points[0] + labelOffset}\n        y={points[1]}\n        dy=\".42em\"\n      >\n        <tspan x={points[0] + labelOffset}>\n          {`${\n            d.medals > 1 ? \"Medals\" : \"Medal\"\n          }: ${d.medals.toLocaleString()} `}\n        </tspan>\n        <tspan\n          x={points[0] + labelOffset}\n          dy=\"1.3em\"\n        >{`Population: ${d.population.toLocaleString()}`}</tspan>\n      </text>\n    </g>\n  );\n};\n","import React, { useState, useMemo, useCallback } from \"react\";\nimport {\n  scaleBand,\n  scaleLog,\n  scaleLinear,\n  scaleSequential,\n  interpolateInferno,\n  extent,\n  max,\n  format,\n} from \"d3\";\n// import { NavBar } from \"./NavBar\";\nimport { AxisBottom } from \"./AxisBottom\";\nimport { AxisLeft } from \"./AxisLeft\";\nimport { Marks } from \"./Marks\";\nimport { Tooltip } from \"./Tooltip\";\n// import { ColorLegend } from \"./ColorLegend\";\n// import chartStyles from \"./css/BarChart.module.css\";\n\nconst width = window.innerWidth < 1000 ? window.innerWidth : 1000;\nconst margin = { top: 5, right: 50, bottom: 45, left: 160 };\n\n// const formatDate = timeFormat(\"%Y/%-m/%-d\");\nconst yValue = (d) => d.entity;\n\nconst xAxisTickFormat = (tickValue) => format(\"~\")(tickValue);\nconst labelFormat = format(\".2\");\n\n// Legend settings\n// const legendRectSize = 15;\n// const legendItemSpacing = 26;\n// const legendX = width - margin.left;\n// const legendY = innerHeight - legendItemSpacing;\n// const ColorLegendLabel = \"疫苗現況\";\n\nconst fadeOpacity = 0.3;\n\nexport const BarChart = ({ view, data, rows }) => {\n  // console.log(data);\n  const [hoveredValue, setHoveredValue] = useState(null);\n  const [points, setPoints] = useState(null);\n  const handleHover = useCallback(setHoveredValue, [setHoveredValue]);\n  const trackPointer = useCallback(setPoints, [setPoints]);\n\n  const height = 20 * rows + margin.top + margin.bottom;\n  // The chart's real height and width\n  const innerHeight = height - margin.top - margin.bottom;\n  const innerWidth = width - margin.left - margin.right;\n\n  const xValue = useMemo(\n    () => (view === \"mpm\" ? (d) => d.medals_per_million : (d) => d.medals),\n    [view]\n  );\n\n  // X axis is percentage of vaccines, thus use linear scale\n  const xScale = useMemo(\n    () =>\n      view === \"mpm\"\n        ? scaleLog().domain(extent(data, xValue)).range([0, innerWidth]).nice()\n        : scaleLinear()\n            .domain([0, max(data, xValue)])\n            .range([0, innerWidth])\n            .nice(),\n    [view, data, xValue, innerWidth]\n  );\n\n  const yScale = useMemo(\n    () =>\n      scaleBand()\n        .domain(data.map((d) => yValue(d)))\n        .range([0, innerHeight])\n        .paddingInner(0.2),\n    [data, innerHeight]\n  );\n\n  const colorScale = useMemo(() => scaleSequential(interpolateInferno), []);\n\n  return (\n    <>\n      <svg viewBox={`0 0 ${width} ${height}`} preserveAspectRatio=\"xMinYMid\">\n        {/* Adds margin to left and top  */}\n        <g transform={`translate(${margin.left}, ${margin.top})`}>\n          <AxisBottom\n            innerHeight={innerHeight}\n            xScale={xScale}\n            tickFormat={xAxisTickFormat}\n            tickOffset={8}\n            tickCount={width > 480 ? 3 : 2}\n          />\n          <AxisLeft yScale={yScale} tickOffset={8} />\n          <Marks\n            view={view}\n            data={data}\n            margin={margin}\n            innerWidth={innerWidth}\n            xScale={xScale}\n            xValue={xValue}\n            yScale={yScale}\n            yValue={yValue}\n            colorScale={colorScale}\n            tooltipFormat={labelFormat}\n            onHover={handleHover}\n            onMove={trackPointer}\n            hoveredValue={hoveredValue}\n            fadeOpacity={fadeOpacity}\n          />\n          {hoveredValue && points ? (\n            <Tooltip\n              data={data}\n              hoveredValue={hoveredValue}\n              points={points}\n              labelOffset={10}\n            />\n          ) : null}\n        </g>\n        {/* <g transform={`translate(${legendX}, ${legendY})`}> */}\n        {/*   <text className={styles.legendLabel} x={-7} y={-legendItemSpacing}> */}\n        {/*     {ColorLegendLabel} */}\n        {/*   </text> */}\n        {/*   <ColorLegend */}\n        {/*     xScake={xScale} */}\n        {/*     xValue1={xValue1} */}\n        {/*     xValue2={xValue2} */}\n        {/*     tickSpacing={legendItemSpacing} */}\n        {/*     tickSize={legendRectSize} */}\n        {/*     tickTextOffset={16} */}\n        {/*     onHover={setHoveredValue} */}\n        {/*     hoveredValue={hoveredValue} */}\n        {/*     fadeOpacity={fadeOpacity} */}\n        {/*   /> */}\n        {/* </g> */}\n      </svg>\n    </>\n  );\n};\n","import React, { useState } from \"react\";\nimport { useData } from \"./useData\";\nimport { Card } from \"./Card\";\nimport { Input } from \"./Input\";\nimport { NavBar } from \"./NavBar\";\nimport { BarChart } from \"./BarChart\";\n\nconst ChartTitle = ({ title }) => (\n  <div>\n    <h1 style={{ margin: 0 }}>{title}</h1>\n  </div>\n);\n\nconst Credit = () => (\n  <p className=\"credit\">\n    Credit: This chart is created based on Edouard Mathieu's{\" \"}\n    <a href=\"https://twitter.com/redouad/status/1418976240954978309\">idea</a>{\" \"}\n    and <a href=\"https://github.com/edomt/tokyo2020\">his project on GitHub</a>.\n  </p>\n);\n\nexport const MedalsPerMillionPeopleBar = () => {\n  const [view, setView] = useState(\"mpm\");\n  const [topTeams, setTopTeams] = useState(30);\n  const rawData = useData();\n\n  if (!rawData) return <pre>\"Loading...\"</pre>;\n  const data = rawData.slice(0, topTeams);\n  // if (data) console.log(data[0]);\n\n  return (\n    <Card>\n      <ChartTitle\n        title={`2020 Summer Olympics ${\n          view === \"mpm\" ? \"medals per million people\" : \"total medals won\"\n        }`}\n      />\n      <pre>Last updated: {data[0].last_updated.toLocaleDateString(\"ja\")}</pre>\n      <Input\n        min={10}\n        max={rawData.length}\n        selected={topTeams}\n        handleChange={setTopTeams}\n      />\n      <NavBar view={view} setView={setView} />\n      <BarChart view={view} data={data} rows={topTeams} />\n      <Credit />\n    </Card>\n  );\n};\n","import { useState, useEffect } from \"react\";\nimport { csv, autoType } from \"d3\";\n\n// const CORS = \"https://morning-wave-49482.herokuapp.com/\";\n// 2020 Summer Olympics medals per million people\n// https://github.com/edomt/tokyo2020\nconst csvUrl =\n  \"https://raw.githubusercontent.com/edomt/tokyo2020/main/output/medals_per_million.csv\";\n\n// Data: Detailed Covid-19 cases in Taiwan\nexport const useData = () => {\n  const [data, setData] = useState(null);\n  // if (data) console.log(data);\n  useEffect(() => {\n    let isMounted = true;\n    csv(csvUrl, autoType).then((d) => {\n      // console.log(\"csv data\", d);\n      if (isMounted) setData(d);\n    });\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n  return data;\n};\n","import styles from \"./css/Input.module.css\";\n\nexport const Input = ({ min, max, selected, handleChange }) => (\n  <div className={styles.inputContainer}>\n    <p>Include entities with at least </p>\n    <input\n      type=\"number\"\n      min={min}\n      max={max}\n      value={selected}\n      onChange={(e) => e.target.value > 0 && handleChange(e.target.value)}\n    />\n    <p> medals</p>\n  </div>\n);\n","import styles from \"./css/Card.module.css\";\nexport const Card = ({ children }) => (\n  <li className={styles.flexCardListItem}>\n    <div className={styles.flexCard}>{children}</div>\n  </li>\n);\n","import styles from \"./css/ScatterPlot.module.css\";\nexport const AxisBottom = ({\n  xScale,\n  innerHeight,\n  tickFormat,\n  tickOffset = 3,\n}) =>\n  // Label and reference lines for x scale\n  xScale.ticks().map((tickValue) => (\n    // Each tick goes to the position indicating its value\n    <g\n      className={styles.tick}\n      key={tickValue}\n      transform={`translate(${xScale(tickValue)}, 0)`}\n    >\n      {/* the values of x1, x2, y1 are 0, which is default */}\n      <line y2={innerHeight} />\n      <text\n        y={innerHeight + tickOffset}\n        dy=\"0.71em\"\n        style={{ textAnchor: \"middle\" }}\n      >\n        {tickFormat(tickValue)}\n      </text>\n    </g>\n  ));\n","import styles from \"./css/ScatterPlot.module.css\";\nexport const AxisLeft = ({ yScale, innerWidth, tickOffset = 3 }) =>\n  // Label for y scale, which is country names\n  yScale.ticks(2).map((tickValue) => (\n    <g\n      key={tickValue}\n      className={styles.tick}\n      transform={`translate(0,${yScale(tickValue)})`}\n    >\n      <line x2={innerWidth} />\n      <text dy=\".32em\" x={-tickOffset} style={{ textAnchor: \"end\" }}>\n        {tickValue}\n      </text>\n    </g>\n  ));\n","import styles from \"./css/ScatterPlot.module.css\";\nexport const Marks = ({\n  xScale,\n  xValue,\n  yScale,\n  yValue,\n  data,\n  tooltipFormat,\n  circleRadius = 10,\n}) =>\n  data.map((d, index) => (\n    <>\n      <circle\n        key={index}\n        className={styles.marks}\n        cx={xScale(xValue(d))}\n        cy={yScale(yValue(d))}\n        r={circleRadius}\n      >\n        <title>{`${d.entity} has earned ${tooltipFormat(\n          xValue(d)\n        )} medals, resulting in ${yValue(d)} medals per million people`}</title>\n      </circle>\n      <text\n        x={xScale(xValue(d)) + circleRadius + 3}\n        y={yScale(yValue(d))}\n        dominantBaseline=\"central\"\n      >\n        {d.entity}\n      </text>\n    </>\n  ));\n","import { useState } from \"react\";\nimport { useData } from \"./useData\";\nimport { Input } from \"./Input\";\nimport { Card } from \"./Card\";\nimport { format, scaleLinear, scaleLog, max } from \"d3\";\nimport { AxisBottom } from \"./AxisBottom\";\nimport { AxisLeft } from \"./AxisLeft\";\nimport { Marks } from \"./Marks\";\nimport styles from \"./css/ScatterPlot.module.css\";\n\nconst ChartTitle = ({ title }) => (\n  <div>\n    <h1 style={{ margin: 0 }}>{title}</h1>\n  </div>\n);\n\nconst Credit = () => (\n  <p className=\"credit\">\n    Credit: This chart is created based on Edouard Mathieu's{\" \"}\n    <a href=\"https://twitter.com/redouad/status/1418976240954978309\">idea</a>{\" \"}\n    and <a href=\"https://github.com/edomt/tokyo2020\">his project on GitHub</a>.\n  </p>\n);\n\nconst initialMinMedals = 4;\nconst width = window.innerWidth < 1000 ? window.innerWidth : 1000;\nconst height = width > 480 ? width * 0.6 : width * 0.8;\nconst margin = { top: 20, right: 100, bottom: 60, left: 75 };\n\n// The chart's real height and width\nconst innerHeight = height - margin.top - margin.bottom;\nconst innerWidth = width - margin.left - margin.right;\n\nconst xValue = (d) => d.medals;\nconst xAxisLabel = \"Total Medals\";\nconst xAxisLabelOffset = 50;\nconst xAxisTickFormat = (tickValue) => format(\"~\")(tickValue);\n\nconst yValue = (d) => d.medals_per_million;\nconst yAxisLabel = \"Medals Per Million People\";\nconst yAxisLabelOffset = 50;\n\nconst tickOffset = 7;\nconst markCircleRadius = 6;\n\nexport const ScatterPlot = () => {\n  const [minMedals, setMinMedals] = useState(initialMinMedals);\n\n  const rawData = useData();\n  if (!rawData) return <pre>\"Loading...\"</pre>;\n\n  const data = rawData.filter((obj) => obj.medals >= minMedals);\n  // console.log(data[0]);\n\n  // X axis is population, thus use linear scale\n  const xScale = scaleLinear()\n    // Domain is an array of actual data, starts from 0 to the max of all countries\n    // d3.max(iterable[, accessor])\n    .domain([minMedals - 1, max(data, xValue)])\n    // Range is where the data is shown in pixels, starts from 0 to chart's width\n    .range([0, innerWidth])\n    .nice();\n\n  // Y is medals per million people is log\n  const yScale = scaleLog()\n    .domain([max(data, yValue), 0.01])\n    .range([0, innerHeight]);\n\n  return (\n    <Card>\n      <ChartTitle title=\"2020 Summer Olympics medals won\" />\n      <pre>Last updated: {data[0].last_updated.toLocaleDateString(\"ja\")}</pre>\n      <Input\n        min={1}\n        max={10}\n        selected={minMedals}\n        handleChange={setMinMedals}\n      />\n      <svg viewBox={`0 0 ${width} ${height}`} preserveAspectRatio=\"xMinYMid\">\n        <g transform={`translate(${margin.left}, ${margin.top})`}>\n          <AxisBottom\n            innerHeight={innerHeight}\n            xScale={xScale}\n            tickFormat={xAxisTickFormat}\n            tickOffset={tickOffset}\n          />\n          <text\n            className={styles.axisLabel}\n            x={innerWidth / 2}\n            y={innerHeight + xAxisLabelOffset}\n            textAnchor=\"middle\"\n          >\n            {xAxisLabel}\n          </text>\n          <AxisLeft\n            innerWidth={innerWidth}\n            yScale={yScale}\n            tickOffset={tickOffset}\n          />\n          <text\n            className={styles.axisLabel}\n            textAnchor=\"middle\"\n            transform={`translate(${-yAxisLabelOffset}, ${\n              innerHeight / 2\n            }) rotate(-90)`}\n          >\n            {yAxisLabel}\n          </text>\n          <Marks\n            xScale={xScale}\n            xValue={xValue}\n            yScale={yScale}\n            yValue={yValue}\n            data={data}\n            tooltipFormat={xAxisTickFormat}\n            circleRadius={markCircleRadius}\n          />\n        </g>\n      </svg>\n      <Credit />\n    </Card>\n  );\n};\n","import { useState, useEffect } from \"react\";\nimport { csv, autoType } from \"d3\";\n\n// const CORS = \"https://morning-wave-49482.herokuapp.com/\";\n// 死亡案例分項統計\nconst csvUrl =\n  \"https://raw.githubusercontent.com/edomt/tokyo2020/main/output/medals_per_million.csv\";\n\n// Data: Detailed Covid-19 cases in Taiwan\nexport const useData = () => {\n  const [data, setData] = useState(null);\n  // if (data) console.log(data);\n  useEffect(() => {\n    let isMounted = true;\n    csv(csvUrl, autoType).then((d) => {\n      // console.log(\"csv data\", d);\n      if (isMounted) setData(d);\n    });\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n  return data;\n};\n","import { GitHubStarBtn } from \"./GitHubStarBtn\";\nimport { MedalsPerMillionPeopleBar } from \"./MedalsPerMillionPeople/index\";\nimport { ScatterPlot } from \"./ScatterPlot\";\nimport \"./App.css\";\n\nconst App = () => (\n  <>\n    <GitHubStarBtn user=\"mgeorgetw\" repo=\"COVID-19-Dashboard\" />\n    <MedalsPerMillionPeopleBar />\n    <ScatterPlot />\n  </>\n);\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flexCardListItem\":\"Card_flexCardListItem__1UgbI\",\"flexCard\":\"Card_flexCard__aF9iL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flexCardListItem\":\"Card_flexCardListItem__khSI4\",\"flexCard\":\"Card_flexCard__1o6wJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"axisLabel\":\"BarChart_axisLabel__3vnVy\",\"marks\":\"BarChart_marks__2eNyt\",\"tooltip\":\"BarChart_tooltip__3dfDM\",\"tooltipStroke\":\"BarChart_tooltipStroke__3EqPW\",\"tick\":\"BarChart_tick__G8viQ\",\"legendLabel\":\"BarChart_legendLabel__9sZvi\",\"legend\":\"BarChart_legend__2Julh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"axisLabel\":\"ScatterPlot_axisLabel__1sZtS\",\"marks\":\"ScatterPlot_marks__3XQOs\",\"tick\":\"ScatterPlot_tick__3XZMt\",\"tooltip\":\"ScatterPlot_tooltip__3bZZR\",\"tooltipStroke\":\"ScatterPlot_tooltipStroke__23dOv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputContainer\":\"Input_inputContainer__2JRdm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__2NhzP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputContainer\":\"Input_inputContainer__29_xR\"};"],"sourceRoot":""}